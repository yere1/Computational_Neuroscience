>>> This repository includes Neuroscience-related projects I have worked on in the recent few months. The folder ‘Comp_Neuro_course_projects’ has some, but not all, of the course projects I have worked on while taking a graduate-level Computational Neuroscience course as an undergraduate in Spring ’17. The other two files are independent projects I have worked on in my free time.

>>> ‘Comp_Neuro_course_projects’ has the following files: FiringRateSimulations.m (simulating two neuron populations with #1 exciting #2, and #2 inhibiting #1), HodgkinHuxley.m (simulating a single nerve cell by assuming Hodgkin-Huxley equations), NeuralNet.m (a neural net with 5 inputs and 2 outputs, no hidden layer), PatternRecognition.m (a neuron-inspired algorithm for finding patterns in a  2D noisy input), SynapticTransmission.m (a model of synaptic transmission between 2 nerve cells).

>>> ‘RingNetwork.py’ is a ring network of neurons connected in a clockwise fashion with excitatory synapses. The size of the ring depends on user input and can be any natural number. The user can inject current into a given cell in the ring, and see how the rest of the cells in the network react to current injection.

>>> ‘StrahlerSimplifcation.py’ is an algorithm I developed based on instructions in Marasco, Limongiello, and Mighliore, "Using Strahler's analysis to reduce up to 200-fold the run time of realistic neuron models", Scientific Reports (2013). It calculates the Strahler number of elements of a complex tree, and then reduces multiple compartments into one by adjusting its biophysical parameters. ‘UseForStrahlerSimplification.txt’ is a sample data input to test the code.